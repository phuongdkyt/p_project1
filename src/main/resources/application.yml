server:
  port: 8090
# ===============================
# DATABASE
# ===============================
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/demo_app?useUnicode=yes&characterEncoding=UTF-8&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    username: root
    password: 123456789
# ===============================
# JPA / HIBERNATE
# ===============================
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
#      naming:
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  jackson:
      time-zone: UTC

  security:
        oauth2:
          client:
            registration:
              facebook:
                clientId: 156686082879099
                clientSecret: 3840f9e1edf13cf482b40fb7ab31e401
                redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
                scope:
                  - email
                  - public_profile
            provider:
              facebook:
                authorizationUri: https://www.facebook.com/v9.0/dialog/oauth
                tokenUri: https://graph.facebook.com/v9.0/oauth/access_token
                userInfoUri: https://graph.facebook.com/v9.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
# app config
app:
  jwt:
    secret:
      user: 2b:Ml]Nps`n{r8P4~8f!h;FyIhqHb#212su
    ttl: 1000h

  oauth2:
      # After successfully authenticating with the OAuth2 Provider,
      # we'll be generating an auth token for the user and sending the token to the
      # redirectUri mentioned by the client in the /oauth2/authorize request.
      # We're not using cookies because they won't work well in mobile clients.
      authorizedRedirectUris:
        - http://localhost:3000/oauth2/redirect
        - myandroidapp://oauth2/redirect
        - myiosapp://oauth2/redirect



